{"ast":null,"code":"import{useState}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Square(_ref){let{value,onSquareClick}=_ref;//マスのコンポーネント\nreturn/*#__PURE__*/_jsx(\"button\",{className:\"square\",onClick:onSquareClick,children:value});}function Board(_ref2){let{xIsNext,squares,onPlay}=_ref2;//盤面のコンポーネント\nfunction handleClick(i){if(squares[i]||calculateWinner(squares)){return;//すでに埋まっているか、勝敗が決まっている場合は何もしない\n}const nextSquares=squares.slice();//一旦配列をコピー\n//変更して\nif(xIsNext){nextSquares[i]=\"X\";}else{nextSquares[i]=\"O\";}onPlay(nextSquares);}const winner=calculateWinner(squares);let status;if(winner){status='Winner: '+winner;}else{status='Next player: '+(xIsNext?'X':'O');}//handleClick(0)を呼び出す関数を作り、参照を渡す。\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"status\",children:status}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[/*#__PURE__*/_jsx(Square,{value:squares[0],onSquareClick:()=>handleClick(0)}),/*#__PURE__*/_jsx(Square,{value:squares[1],onSquareClick:()=>handleClick(1)}),/*#__PURE__*/_jsx(Square,{value:squares[2],onSquareClick:()=>handleClick(2)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[/*#__PURE__*/_jsx(Square,{value:squares[3],onSquareClick:()=>handleClick(3)}),/*#__PURE__*/_jsx(Square,{value:squares[4],onSquareClick:()=>handleClick(4)}),/*#__PURE__*/_jsx(Square,{value:squares[5],onSquareClick:()=>handleClick(5)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[/*#__PURE__*/_jsx(Square,{value:squares[6],onSquareClick:()=>handleClick(6)}),/*#__PURE__*/_jsx(Square,{value:squares[7],onSquareClick:()=>handleClick(7)}),/*#__PURE__*/_jsx(Square,{value:squares[8],onSquareClick:()=>handleClick(8)})]})]});}export default function Game(){const[history,setHistory]=useState([Array(9).fill(null)]);//9マスの配列が一個\nconst[currentMove,setCurrentMove]=useState(0);//現在の手数\nconst xIsNext=currentMove%2===0;//次がXかどうか\nconst currentSquares=history[currentMove];function handlePlay(nextSquares){const nextHistory=[...history.slice(0,currentMove+1),nextSquares];setHistory(nextHistory);setCurrentMove(nextHistory.length-1);}function jumpTo(nextMove){setCurrentMove(nextMove);}//戻るボタンのコンポーネントのリスト\nconst moves=history.map((squares,move)=>{let description;if(move>0){description='Go to move #'+move;}else{description='Go to game start';}return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>jumpTo(move),children:description})},move);});return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:/*#__PURE__*/_jsx(Board,{xIsNext:xIsNext,squares:currentSquares,onPlay:handlePlay})}),/*#__PURE__*/_jsx(\"div\",{className:\"game-info\",children:/*#__PURE__*/_jsx(\"ol\",{children:moves})})]});}//勝敗判定\nfunction calculateWinner(squares){const lines=[[0,1,2],[3,4,5],[6,7,8],//横\n[0,3,6],[1,4,7],[2,5,8],//縦\n[0,4,8],[2,4,6]//斜め\n];for(let i=0;i<lines.length;i++){const[a,b,c]=lines[i];if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){return squares[a];}}return null;}","map":{"version":3,"names":["useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Square","_ref","value","onSquareClick","className","onClick","children","Board","_ref2","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","status","Game","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","map","move","description","lines","a","b","c"],"sources":["/home/hiraisun/projects/20240722_PracticeReact/react-tutorial/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) { //マスのコンポーネント\n\n  return (\n    <button\n      className=\"square\"\n      onClick={onSquareClick}\n    >{value}</button>\n  );\n}\n\n\nfunction Board({ xIsNext, squares, onPlay }) { //盤面のコンポーネント\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return; //すでに埋まっているか、勝敗が決まっている場合は何もしない\n    }\n    const nextSquares = squares.slice();  //一旦配列をコピー\n    //変更して\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  //handleClick(0)を呼び出す関数を作り、参照を渡す。\n  return (<>\n    <div className=\"status\">{status}</div>\n    <div className=\"board-row\">\n      <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n      <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n      <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n    </div>\n    <div className=\"board-row\">\n      <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n      <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n      <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n    </div>\n    <div className=\"board-row\">\n      <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n      <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n      <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n    </div>\n\n\n  </>);\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]); //9マスの配列が一個\n  const [currentMove, setCurrentMove] = useState(0); //現在の手数\n  const xIsNext = (currentMove % 2) === 0; //次がXかどうか\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  //戻るボタンのコンポーネントのリスト\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\n//勝敗判定\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2], [3, 4, 5], [6, 7, 8], //横\n    [0, 3, 6], [1, 4, 7], [2, 5, 8], //縦\n    [0, 4, 8], [2, 4, 6]           //斜め\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}